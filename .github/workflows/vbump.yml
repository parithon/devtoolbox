name: Versioning

on:
  pull_request:
    types: [labeled] # Only run if we are a pull_request AND have been labeled
    branches: # Only run if the pull_request is on the master branch
    - master
  push:
    branches:
    - actions-versioning # Also include this branch for testing

jobs:
  Update-ManifestVersion:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'michaeljolley/devtoolbox'
        ref: 'vNext'
        path: '.master'

    - uses: actions/checkout@v2
      with:
        path: '.current'

    - name: 'Bootstraping PowerShell'
      run: |
        & .master/_build/bootstrap.ps1

    - name: 'Update the current module manifest'
      run: |
        Import-Module Configuration
        $metadata = New-Object PSObject -Property @{
          Functions = (Get-ChildItem -Path '.master/src/Export' -Recurse -Filter *.ps1 -Exclude *Tests*).BaseName
          ModuleVersion = (Test-ModuleManifest -Path '.master/src/devtoolbox.psd1').Version
        }
        $functionsToExport = (Get-ChildItem -Path '.current/src/Export' -Recurse -Filter *.ps1 -Exclude *Tests*).BaseName
        $isMajor = $false
        $isMinor = $false
        
        # Check whether new functions exist or if a function name has changed
        & {
          foreach ($func in $functionsToExport) {
            if ($metadata.Functions -notcontains $func) {
              # New or Changed function found
              $isMinor = $true
            }
          }
        }

        # Update the manifest
        & {
          # Create the Get-FunctionAliases function
          . '.current/src/Private/Get-FunctionAliases.ps1'

          # Generate the version number
          $version = ""
          if ($isMajor) {
            $version = "$($metadata.ModuleVersion.Major + 1).0.0"
          }
          elseif ($isMinor) {
            $version = "$($metadata.ModuleVersion.Major).$($metadata.ModuleVersion.Minor + 1).0"
          }
          else {
            $version = "$($metadata.ModuleVersion.Major).$($metadata.ModuleVersion.Minor).$($metdata.ModuleVersion.Build + 1)"
          }

          # Update the manifest
          Update-ModuleManifest -Path '.current/src/devtoolbox.psd1' `
            -RootModule devtoolbox.psm1 `
            -FunctionsToExport $functionsToExport `
            -AliasesToExport ($functionsToExport | Get-FunctionAliases) `
            -ModuleVersion $version
        }

        # Test the manifest
        Write-Output (Test-ModuleManifest -Path '.current/src/devtoolbox.psd1')
